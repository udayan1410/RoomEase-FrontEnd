{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\containers\\\\CreateRoom\\\\CreateRoom.js\";\nimport React, { Component } from 'react';\nimport { withLayout } from '../../hoc/Layout/withLayout';\nimport * as classes from './createroom.module.css';\nimport TextInput from '../../components/inputs/TextInput';\nimport RegularButton from '../../components/inputs/RegularButton';\nimport Axios from 'axios';\nimport { CREATE_ROOM_URL } from '../../constants/ServerRoutes';\nimport ErrorMessage from '../../components/inputs/ErrorMessage';\nimport { AUTHENTICATE_USER } from '../../store/Actions/ActionConstants';\nimport { connect } from 'react-redux';\nimport '../../constants/ClientRoutes';\n\nclass CreateRoom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      roomName: null,\n      buttonDisabled: true,\n      error: null\n    };\n\n    this.roomNameChangedHandler = event => {\n      let roomName = event.target.value;\n      let buttonDisabled = true;\n      if (roomName.length >= 3) buttonDisabled = false;\n      this.setState({\n        roomName,\n        buttonDisabled\n      });\n    };\n\n    this.createGroupHandler = async () => {\n      let RoomInfo = {\n        userID: this.props.userID,\n        roomName: this.state.roomName\n      };\n      let roomCreateStats = (await Axios.post(CREATE_ROOM_URL, RoomInfo)).data;\n      console.log(roomCreateStats);\n\n      if (roomCreateStats.Result === \"Success\") {\n        let userData = {\n          _id: this.props.userID,\n          roomName: this.state.roomName\n        };\n        this.props.updateUserData(userData);\n        this.props.history.push(`${ROOM_URL}/${this.state.roomName}${ACTIVITY_URL}`);\n      } else {\n        let error = roomCreateStats.Error;\n        console.log(error);\n        this.setState({\n          error: error\n        });\n      }\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.state.error) errorMessage = /*#__PURE__*/React.createElement(ErrorMessage, {\n      message: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Create Room\"), /*#__PURE__*/React.createElement(TextInput, {\n      hint: \"Enter Group Name\",\n      onChange: this.roomNameChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), errorMessage, /*#__PURE__*/React.createElement(RegularButton, {\n      onClick: this.createGroupHandler,\n      text: \"Create Room\",\n      disabled: this.state.buttonDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userID: state.userID\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserData: payload => dispatch({\n      type: AUTHENTICATE_USER,\n      user: payload\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayout(CreateRoom));","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/containers/CreateRoom/CreateRoom.js"],"names":["React","Component","withLayout","classes","TextInput","RegularButton","Axios","CREATE_ROOM_URL","ErrorMessage","AUTHENTICATE_USER","connect","CreateRoom","state","roomName","buttonDisabled","error","roomNameChangedHandler","event","target","value","length","setState","createGroupHandler","RoomInfo","userID","props","roomCreateStats","post","data","console","log","Result","userData","_id","updateUserData","history","push","ROOM_URL","ACTIVITY_URL","Error","render","errorMessage","Form","mapStateToProps","mapDispatchToProps","dispatch","payload","type","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAgB,8BAAhB;;AAEA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG/BW,KAH+B,GAGvB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,cAAc,EAAE,IAFZ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAHuB;;AAAA,SAS/BC,sBAT+B,GASLC,KAAD,IAAW;AAChC,UAAIJ,QAAQ,GAAGI,KAAK,CAACC,MAAN,CAAaC,KAA5B;AACA,UAAIL,cAAc,GAAG,IAArB;AACA,UAAID,QAAQ,CAACO,MAAT,IAAmB,CAAvB,EACIN,cAAc,GAAG,KAAjB;AAEJ,WAAKO,QAAL,CAAc;AAAER,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAd;AACH,KAhB8B;;AAAA,SAkB/BQ,kBAlB+B,GAkBV,YAAY;AAC7B,UAAIC,QAAQ,GAAG;AACXC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MADR;AAGXX,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAHV,OAAf;AAOA,UAAIa,eAAe,GAAG,CAAC,MAAMpB,KAAK,CAACqB,IAAN,CAAWpB,eAAX,EAA4BgB,QAA5B,CAAP,EAA8CK,IAApE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;;AACA,UAAIA,eAAe,CAACK,MAAhB,KAA2B,SAA/B,EAA0C;AAEtC,YAAIC,QAAQ,GAAG;AACXC,UAAAA,GAAG,EAAE,KAAKR,KAAL,CAAWD,MADL;AAEXX,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFV,SAAf;AAIA,aAAKY,KAAL,CAAWS,cAAX,CAA0BF,QAA1B;AACA,aAAKP,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAyB,GAAEC,QAAS,IAAG,KAAKzB,KAAL,CAAWC,QAAS,GAAEyB,YAAa,EAA1E;AACH,OARD,MAUK;AACD,YAAIvB,KAAK,GAAGW,eAAe,CAACa,KAA5B;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACA,aAAKM,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACH;AACJ,KA3C8B;AAAA;;AA6C/ByB,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAI,KAAK7B,KAAL,CAAWG,KAAf,EACI0B,YAAY,gBAAI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAEJ,wBACI;AAAM,MAAA,SAAS,EAAEZ,OAAO,CAACuC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,kBAAhB;AAAmC,MAAA,QAAQ,EAAE,KAAK1B,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKyB,YAHL,eAII,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKnB,kBAA7B;AAAiD,MAAA,IAAI,EAAC,aAAtD;AAAoE,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWE,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AA3D8B;;AA8DnC,MAAM6B,eAAe,GAAG/B,KAAK,IAAI;AAC7B,SAAO;AACHY,IAAAA,MAAM,EAAEZ,KAAK,CAACY;AADX,GAAP;AAGH,CAJD;;AAMA,MAAMoB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHX,IAAAA,cAAc,EAAGY,OAAD,IAAaD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEtC,iBAAR;AAA2BuC,MAAAA,IAAI,EAAEF;AAAjC,KAAD;AADlC,GAAP;AAGH,CAJD;;AAOA,eAAepC,OAAO,CAACiC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C1C,UAAU,CAACS,UAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { withLayout } from '../../hoc/Layout/withLayout'\r\nimport * as classes from './createroom.module.css';\r\nimport TextInput from '../../components/inputs/TextInput';\r\nimport RegularButton from '../../components/inputs/RegularButton';\r\nimport Axios from 'axios';\r\nimport { CREATE_ROOM_URL } from '../../constants/ServerRoutes';\r\nimport ErrorMessage from '../../components/inputs/ErrorMessage';\r\nimport { AUTHENTICATE_USER } from '../../store/Actions/ActionConstants';\r\nimport { connect } from 'react-redux';\r\nimport { } from '../../constants/ClientRoutes'\r\n\r\nclass CreateRoom extends Component {\r\n\r\n\r\n    state = {\r\n        roomName: null,\r\n        buttonDisabled: true,\r\n        error: null,\r\n    }\r\n\r\n    roomNameChangedHandler = (event) => {\r\n        let roomName = event.target.value;\r\n        let buttonDisabled = true;\r\n        if (roomName.length >= 3)\r\n            buttonDisabled = false;\r\n\r\n        this.setState({ roomName, buttonDisabled })\r\n    }\r\n\r\n    createGroupHandler = async () => {\r\n        let RoomInfo = {\r\n            userID: this.props.userID,\r\n\r\n            roomName: this.state.roomName\r\n        }\r\n\r\n\r\n        let roomCreateStats = (await Axios.post(CREATE_ROOM_URL, RoomInfo)).data;\r\n        console.log(roomCreateStats);\r\n        if (roomCreateStats.Result === \"Success\") {\r\n\r\n            let userData = {\r\n                _id: this.props.userID,\r\n                roomName: this.state.roomName\r\n            }\r\n            this.props.updateUserData(userData);\r\n            this.props.history.push(`${ROOM_URL}/${this.state.roomName}${ACTIVITY_URL}`)\r\n        }\r\n\r\n        else {\r\n            let error = roomCreateStats.Error;\r\n            console.log(error);\r\n            this.setState({ error: error })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let errorMessage = null;\r\n        if (this.state.error)\r\n            errorMessage = (<ErrorMessage message={this.state.error} />)\r\n\r\n        return (\r\n            <form className={classes.Form}>\r\n                <p>Create Room</p>\r\n                <TextInput hint=\"Enter Group Name\" onChange={this.roomNameChangedHandler} />\r\n                {errorMessage}\r\n                <RegularButton onClick={this.createGroupHandler} text=\"Create Room\" disabled={this.state.buttonDisabled} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userID: state.userID,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserData: (payload) => dispatch({ type: AUTHENTICATE_USER, user: payload })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayout(CreateRoom));\r\n"]},"metadata":{},"sourceType":"module"}