{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\containers\\\\ViewNotes\\\\CreateNotes\\\\CreateNotes.js\";\nimport React, { Component } from 'react';\nimport * as classes from './createnotes.module.css';\nimport Axios from 'axios';\nimport { withLayout } from '../../../hoc/Layout/withLayout';\nimport RegularButton from '../../../components/inputs/RegularButton';\nimport { NOTES_CREATION_URL } from '../../../constants/ServerRoutes';\n\nclass CreateNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        note: event.target.value\n      });\n    };\n\n    this.titleChange = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.shareNote = () => {\n      this.setState({\n        shared: true\n      });\n      this.uploadNote();\n    };\n\n    this.uploadNote = async () => {\n      if (this.state.note.length !== 0 && this.state.title.length !== 0) {\n        let notesModel = {\n          noteTitle: this.state.title,\n          body: this.state.note,\n          roomName: localStorage.getItem(\"roomName\"),\n          userID: localStorage.getItem(\"userID\"),\n          shared: this.state.shared\n        };\n        let notesCreationStatus = (await Axios.post(NOTES_CREATION_URL, notesModel)).data; // //**********PLEASE CHECK THIS */\n\n        if (notesCreationStatus.Result === \"Success\") {\n          this.props.history.goBack();\n        } else alert(\"Failed\"); // this.props.history.push('/notes/view');\n\n      } else {\n        alert(\"Please fill required details\");\n      }\n    };\n\n    this.handleSharing = () => {\n      this.setState({\n        shared: !this.state.shared\n      });\n    };\n\n    this.state = {\n      note: '',\n      title: '',\n      shared: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.title,\n      placeholder: \"Title\",\n      onChange: this.titleChange,\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Type your note here..\",\n      className: classes.note,\n      name: \"text area\",\n      value: this.state.note,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttoncontainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.button1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Share with roommates:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.shared,\n      onChange: this.handleSharing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(RegularButton, {\n      onClick: this.shareNote,\n      text: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \" \"))));\n  }\n\n}\n\nexport default withLayout(CreateNotes);","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/containers/ViewNotes/CreateNotes/CreateNotes.js"],"names":["React","Component","classes","Axios","withLayout","RegularButton","NOTES_CREATION_URL","CreateNotes","constructor","props","handleChange","event","setState","note","target","value","titleChange","title","shareNote","shared","uploadNote","state","length","notesModel","noteTitle","body","roomName","localStorage","getItem","userID","notesCreationStatus","post","data","Result","history","goBack","alert","handleSharing","render","buttoncontainer","button1"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,kBAAT,QAAmC,iCAAnC;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,YARmB,GAQHC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;AACH,KAVkB;;AAAA,SAWnBC,WAXmB,GAWJL,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAAtB,OAAd;AACH,KAbkB;;AAAA,SAgBnBG,SAhBmB,GAgBP,MAAM;AACd,WAAKN,QAAL,CAAc;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,WAAKC,UAAL;AACH,KAnBkB;;AAAA,SAoBnBA,UApBmB,GAoBN,YAAY;AACrB,UAAI,KAAKC,KAAL,CAAWR,IAAX,CAAgBS,MAAhB,KAA2B,CAA3B,IAAgC,KAAKD,KAAL,CAAWJ,KAAX,CAAiBK,MAAjB,KAA4B,CAAhE,EAAmE;AAG/D,YAAIC,UAAU,GAAG;AACbC,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWJ,KADT;AAEbQ,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWR,IAFJ;AAGba,UAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAHG;AAIbC,UAAAA,MAAM,EAAEF,YAAY,CAACC,OAAb,CAAqB,QAArB,CAJK;AAKbT,UAAAA,MAAM,EAAE,KAAKE,KAAL,CAAWF;AALN,SAAjB;AASA,YAAIW,mBAAmB,GAAG,CAAC,MAAM3B,KAAK,CAAC4B,IAAN,CAAWzB,kBAAX,EAA+BiB,UAA/B,CAAP,EAAmDS,IAA7E,CAZ+D,CAc/D;;AACA,YAAIF,mBAAmB,CAACG,MAApB,KAA+B,SAAnC,EAA8C;AAC1C,eAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,MAAnB;AACH,SAFD,MAIIC,KAAK,CAAC,QAAD,CAAL,CAnB2D,CAoB/D;;AACH,OArBD,MAsBK;AACDA,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH;AACJ,KA9CkB;;AAAA,SA+CnBC,aA/CmB,GA+CH,MAAM;AAClB,WAAKzB,QAAL,CAAc;AAAEO,QAAAA,MAAM,EAAE,CAAC,KAAKE,KAAL,CAAWF;AAAtB,OAAd;AACH,KAjDkB;;AAEf,SAAKE,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,EADG;AAETI,MAAAA,KAAK,EAAE,EAFE;AAGTE,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AA2CDmB,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWJ,KAAzB;AAAgC,MAAA,WAAW,EAAC,OAA5C;AAAoD,MAAA,QAAQ,EAAE,KAAKD,WAAnE;AAAgF,MAAA,SAAS,EAAEd,OAAO,CAACe,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAU,MAAA,WAAW,EAAC,uBAAtB;AAA8C,MAAA,SAAS,EAAEf,OAAO,CAACW,IAAjE;AAAuE,MAAA,IAAI,EAAC,WAA5E;AAAwF,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,IAA1G;AAAgH,MAAA,QAAQ,EAAE,KAAKH,YAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAK,MAAA,SAAS,EAAER,OAAO,CAACqC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAErC,OAAO,CAACsC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAwB;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWF,MAA3C;AAAmD,MAAA,QAAQ,EAAE,KAAKkB,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CADJ,eAGI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKnB,SAA7B;AAAwC,MAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ,CAJJ,CADJ;AAiBH;;AAvE+B;;AA4EpC,eAAed,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport * as classes from './createnotes.module.css';\r\nimport Axios from 'axios';\r\nimport { withLayout } from '../../../hoc/Layout/withLayout'\r\nimport RegularButton from '../../../components/inputs/RegularButton';\r\nimport { NOTES_CREATION_URL } from '../../../constants/ServerRoutes';\r\n\r\nclass CreateNotes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: '',\r\n            title: '',\r\n            shared: false,\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ note: event.target.value })\r\n    }\r\n    titleChange = (event) => {\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n\r\n    shareNote = () => {\r\n        this.setState({ shared: true })\r\n        this.uploadNote()\r\n    }\r\n    uploadNote = async () => {\r\n        if (this.state.note.length !== 0 && this.state.title.length !== 0) {\r\n\r\n\r\n            let notesModel = {\r\n                noteTitle: this.state.title,\r\n                body: this.state.note,\r\n                roomName: localStorage.getItem(\"roomName\"),\r\n                userID: localStorage.getItem(\"userID\"),\r\n                shared: this.state.shared,\r\n            };\r\n\r\n\r\n            let notesCreationStatus = (await Axios.post(NOTES_CREATION_URL, notesModel)).data;\r\n\r\n            // //**********PLEASE CHECK THIS */\r\n            if (notesCreationStatus.Result === \"Success\") {\r\n                this.props.history.goBack();\r\n            }\r\n            else\r\n                alert(\"Failed\")\r\n            // this.props.history.push('/notes/view');\r\n        }\r\n        else {\r\n            alert(\"Please fill required details\")\r\n        }\r\n    }\r\n    handleSharing = () => {\r\n        this.setState({ shared: !this.state.shared })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div >\r\n                <input value={this.state.title} placeholder=\"Title\" onChange={this.titleChange} className={classes.title} />\r\n                <textarea placeholder=\"Type your note here..\" className={classes.note} name=\"text area\" value={this.state.note} onChange={this.handleChange}></textarea>\r\n\r\n                <div className={classes.buttoncontainer}>\r\n                    <div className={classes.button1}>\r\n                        <p>Share with roommates:<input type=\"checkbox\" checked={this.state.shared} onChange={this.handleSharing} /></p>\r\n\r\n                        <RegularButton onClick={this.shareNote} text=\"Submit\"> </RegularButton>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withLayout(CreateNotes);"]},"metadata":{},"sourceType":"module"}