{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\containers\\\\ViewNotes\\\\AllNotes\\\\AllNotes.js\";\nimport React, { Component } from 'react';\nimport * as classes from './allnotes.module.css';\nimport Axios from 'axios';\nimport NotesList from '../../../components/NotesList/NotesList';\nimport { withLayout } from '../../../hoc/Layout/withLayout';\nimport addIcon from '../../../assets/addIcon.png';\nimport { Link } from 'react-router-dom';\nimport * as SplitEaseClientRoutes from '../../../constants/ClientRoutes';\nimport { SELF_NOTES_URL, ROOM_NOTES_URL } from '../../../constants/ServerRoutes';\nimport Tabs from '../../../components/Tabs/Tabs';\n\nclass AllNotes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      self: true,\n      roomName: localStorage.getItem(\"roomName\"),\n      userID: localStorage.getItem(\"userID\"),\n      selfNotes: [],\n      roomNotes: []\n    };\n\n    this.getAllNotes = async () => {\n      try {\n        let Notes;\n        if (this.state.self) Notes = await Axios.get(`${SELF_NOTES_URL}?roomName=${this.state.roomName}&userID=${this.state.userID}`);else Notes = await Axios.get(`${ROOM_NOTES_URL}?roomname=${this.state.roomName}`);\n        let NotesModel = Notes.data;\n\n        if (NotesModel.Result === \"Success\") {\n          if (this.state.self) this.setState({\n            selfNotes: NotesModel.notes\n          });else this.setState({\n            roomNotes: NotesModel.notes\n          });\n        }\n      } catch (err) {\n        console.log(\"[TASKS.js] Something went wrong \", err);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAllNotes();\n  }\n\n  componentDidUpdate() {\n    let link = this.props.location.pathname;\n\n    if (this.state.self) {\n      if (link.includes(SplitEaseClientRoutes.VIEW_ROOM_NOTES_URL)) this.setState({\n        self: false\n      }, () => this.getAllNotes());\n    } else {\n      if (link.includes(SplitEaseClientRoutes.VIEW_SELF_NOTES_URL)) this.setState({\n        self: true\n      }, () => this.getAllNotes());\n    }\n  }\n\n  render() {\n    let getTabsList = () => {\n      let tabsList = [{\n        name: \"Self Notes\",\n        url: SplitEaseClientRoutes.VIEW_SELF_NOTES_URL\n      }];\n      let roomName = localStorage.getItem(\"roomName\");\n      if (roomName !== \"null\") tabsList.push({\n        name: \"Room Notes\",\n        url: SplitEaseClientRoutes.VIEW_ROOM_NOTES_URL\n      });\n      return tabsList;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      tabsList: getTabsList(),\n      url: this.props.match.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, !this.state.self ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }, \"All Notes of \", this.state.roomName) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 87\n      }\n    }, \"All  Notes\"), /*#__PURE__*/React.createElement(Link, {\n      to: SplitEaseClientRoutes.CREATE_NOTES_URL,\n      style: {\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: addIcon,\n      alt: \"Add note\",\n      className: classes.Icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }))), this.state.self ? /*#__PURE__*/React.createElement(NotesList, {\n      notes: this.state.selfNotes,\n      roomName: this.state.roomName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(NotesList, {\n      notes: this.state.roomNotes,\n      roomName: this.state.roomName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 112\n      }\n    }));\n  }\n\n}\n\nexport default withLayout(AllNotes);","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/containers/ViewNotes/AllNotes/AllNotes.js"],"names":["React","Component","classes","Axios","NotesList","withLayout","addIcon","Link","SplitEaseClientRoutes","SELF_NOTES_URL","ROOM_NOTES_URL","Tabs","AllNotes","state","self","roomName","localStorage","getItem","userID","selfNotes","roomNotes","getAllNotes","Notes","get","NotesModel","data","Result","setState","notes","err","console","log","componentDidMount","componentDidUpdate","link","props","location","pathname","includes","VIEW_ROOM_NOTES_URL","VIEW_SELF_NOTES_URL","render","getTabsList","tabsList","name","url","push","Container","match","Header","CREATE_NOTES_URL","textDecoration","Icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as classes from './allnotes.module.css';\r\nimport Axios from 'axios';\r\nimport NotesList from '../../../components/NotesList/NotesList'\r\nimport { withLayout } from '../../../hoc/Layout/withLayout'\r\nimport addIcon from '../../../assets/addIcon.png';\r\nimport { Link } from 'react-router-dom';\r\nimport * as SplitEaseClientRoutes from '../../../constants/ClientRoutes';\r\nimport { SELF_NOTES_URL, ROOM_NOTES_URL } from '../../../constants/ServerRoutes'\r\nimport Tabs from '../../../components/Tabs/Tabs';\r\n\r\nclass AllNotes extends Component {\r\n    state = {\r\n        self: true,\r\n        roomName: localStorage.getItem(\"roomName\"),\r\n        userID: localStorage.getItem(\"userID\"),\r\n        selfNotes: [],\r\n        roomNotes: [],\r\n\r\n    }\r\n\r\n    getAllNotes = async () => {\r\n        try {\r\n            let Notes\r\n            if (this.state.self)\r\n                Notes = await Axios.get(`${SELF_NOTES_URL}?roomName=${this.state.roomName}&userID=${this.state.userID}`)\r\n            else\r\n                Notes = await Axios.get(`${ROOM_NOTES_URL}?roomname=${this.state.roomName}`)\r\n\r\n            let NotesModel = Notes.data;\r\n            if (NotesModel.Result === \"Success\") {\r\n                if (this.state.self)\r\n                    this.setState({ selfNotes: NotesModel.notes });\r\n                else\r\n                    this.setState({ roomNotes: NotesModel.notes });\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"[TASKS.js] Something went wrong \", err);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllNotes();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        let link = this.props.location.pathname;\r\n\r\n        if (this.state.self) {\r\n            if (link.includes(SplitEaseClientRoutes.VIEW_ROOM_NOTES_URL))\r\n                this.setState({ self: false }, () => this.getAllNotes())\r\n        }\r\n        else {\r\n            if (link.includes(SplitEaseClientRoutes.VIEW_SELF_NOTES_URL))\r\n                this.setState({ self: true }, () => this.getAllNotes())\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let getTabsList = () => {\r\n            let tabsList = [\r\n                { name: \"Self Notes\", url: SplitEaseClientRoutes.VIEW_SELF_NOTES_URL },\r\n            ]\r\n            let roomName = localStorage.getItem(\"roomName\");\r\n\r\n            if (roomName !== \"null\")\r\n                tabsList.push({ name: \"Room Notes\", url: SplitEaseClientRoutes.VIEW_ROOM_NOTES_URL });\r\n\r\n            return tabsList;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Container}>\r\n                <Tabs tabsList={getTabsList()} url={this.props.match.url} />\r\n                <div className={classes.Header}>\r\n                    {!this.state.self ? <h1>All Notes of {this.state.roomName}</h1> : <h1>All  Notes</h1>}\r\n                    <Link to={SplitEaseClientRoutes.CREATE_NOTES_URL} style={{ textDecoration: \"none\" }}>\r\n                        <img src={addIcon} alt={\"Add note\"} className={classes.Icon} />\r\n                    </Link>\r\n                </div>\r\n                {this.state.self ? <NotesList notes={this.state.selfNotes} roomName={this.state.roomName} /> : <NotesList notes={this.state.roomNotes} roomName={this.state.roomName} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default withLayout(AllNotes);\r\n\r\n"]},"metadata":{},"sourceType":"module"}