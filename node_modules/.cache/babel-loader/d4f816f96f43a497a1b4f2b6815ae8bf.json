{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\containers\\\\Account\\\\Login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RegularButton from \"../../../components/inputs/RegularButton\";\nimport TextInput from \"../../../components/inputs/TextInput\";\nimport * as classes from './login.module.css';\nimport axios from 'axios';\nimport { LOGIN_URL } from '../../../constants/ServerRoutes';\nimport { ROOM_URL, ROOM_JOIN_URL, SIGNUP_URL, ACTIVITY_URL } from '../../../constants/ClientRoutes';\nimport ErrorMessage from '../../../components/inputs/ErrorMessage';\nimport { CHECK_AUTH_STATE, AUTHENTICATE_USER } from '../../../store/Actions/ActionConstants';\nimport { connect } from 'react-redux';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n      userLoggedIn: false\n    };\n\n    this.handleEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.validate = () => {\n      if (this.state.email === '' || this.state.password === '') this.setState({\n        error: \"Email id/ Password cannot be empty\"\n      });\n    };\n\n    this.authenticateUser = async () => {\n      this.validate();\n      let loginCredentials = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      let loginStatus = (await axios.post(LOGIN_URL, loginCredentials)).data;\n      let {\n        responseObject,\n        user\n      } = loginStatus;\n\n      if (responseObject.Result === \"Success\") {\n        this.props.updateUserData(user);\n        this.setState({\n          error: \"\"\n        }, () => {\n          if (this.props.roomName) this.props.history.push(ROOM_URL + '/' + this.props.roomName + ACTIVITY_URL);else this.props.history.push(ROOM_JOIN_URL);\n        });\n      } else this.setState({\n        error: responseObject.Error\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.checkAuthState();\n  }\n\n  render() {\n    let erorrMessage = null;\n    if (this.state.error) erorrMessage = /*#__PURE__*/React.createElement(ErrorMessage, {\n      message: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"RoomEase\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.signin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(TextInput, {\n      hint: \"Enter Email\",\n      type: \"text\",\n      onChange: this.handleEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      hint: \"Enter Password\",\n      type: \"password\",\n      onChange: this.handlePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RegularButton, {\n      text: \"SUBMIT\",\n      onClick: this.authenticateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), erorrMessage, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forgot-password text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: SIGNUP_URL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Don't have an account? Signup here\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userLoggedIn: state.userID != null,\n    roomName: state.roomName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkAuthState: () => dispatch({\n      type: CHECK_AUTH_STATE\n    }),\n    updateUserData: payload => dispatch({\n      type: AUTHENTICATE_USER,\n      user: payload\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/containers/Account/Login/Login.js"],"names":["React","Component","Link","RegularButton","TextInput","classes","axios","LOGIN_URL","ROOM_URL","ROOM_JOIN_URL","SIGNUP_URL","ACTIVITY_URL","ErrorMessage","CHECK_AUTH_STATE","AUTHENTICATE_USER","connect","Login","state","email","password","error","userLoggedIn","handleEmail","event","setState","target","value","handlePassword","validate","authenticateUser","loginCredentials","loginStatus","post","data","responseObject","user","Result","props","updateUserData","roomName","history","push","Error","componentDidMount","checkAuthState","render","erorrMessage","Form","signin","mapStateToProps","userID","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,YAA9C,QAAkE,iCAAlE;AAEA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,wCAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,KAAN,SAAoBf,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BgB,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,YAAY,EAAE;AAJV,KAFkB;;AAAA,SAS1BC,WAT0B,GASZC,KAAK,IAAI;AACnB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAXyB;;AAAA,SAY1BC,cAZ0B,GAYTJ,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACH,KAdyB;;AAAA,SAgB1BE,QAhB0B,GAgBf,MAAM;AACb,UAAI,KAAKX,KAAL,CAAWC,KAAX,KAAqB,EAArB,IAA2B,KAAKD,KAAL,CAAWE,QAAX,KAAwB,EAAvD,EACI,KAAKK,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACP,KAnByB;;AAAA,SAyB1BS,gBAzB0B,GAyBP,YAAY;AAC3B,WAAKD,QAAL;AAEA,UAAIE,gBAAgB,GAAG;AAAEZ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAApB;AAA2BC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAAhD,OAAvB;AACA,UAAIY,WAAW,GAAG,CAAC,MAAMzB,KAAK,CAAC0B,IAAN,CAAWzB,SAAX,EAAsBuB,gBAAtB,CAAP,EAAgDG,IAAlE;AAEA,UAAI;AAAEC,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB,UAA2BJ,WAA/B;;AAEA,UAAIG,cAAc,CAACE,MAAf,KAA0B,SAA9B,EAAyC;AACrC,aAAKC,KAAL,CAAWC,cAAX,CAA0BH,IAA1B;AACA,aAAKX,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAd,EAA6B,MAAM;AAC/B,cAAI,KAAKiB,KAAL,CAAWE,QAAf,EACI,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwBjC,QAAQ,GAAG,GAAX,GAAiB,KAAK6B,KAAL,CAAWE,QAA5B,GAAuC5B,YAA/D,EADJ,KAGI,KAAK0B,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwBhC,aAAxB;AACP,SALD;AAMH,OARD,MAWI,KAAKe,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEc,cAAc,CAACQ;AAAxB,OAAd;AACP,KA7CyB;AAAA;;AAqB1BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWO,cAAX;AACH;;AAwBDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG,IAAnB;AAEA,QAAI,KAAK7B,KAAL,CAAWG,KAAf,EACI0B,YAAY,gBAAI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,MAAA,SAAS,EAAEf,OAAO,CAAC0C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE1C,OAAO,CAAC2C,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,aAAhB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,QAAQ,EAAE,KAAK1B,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,gBAAhB;AAAiC,MAAA,IAAI,EAAC,UAAtC;AAAiD,MAAA,QAAQ,EAAE,KAAKK,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAE,KAAKE,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMKiB,YANL,eAOI;AAAG,MAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEpC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,CAPJ,CAFJ,CADJ;AAgBH;;AAtEyB;;AAyE9B,MAAMuC,eAAe,GAAIhC,KAAD,IAAW;AAC/B,SAAO;AACHI,IAAAA,YAAY,EAAEJ,KAAK,CAACiC,MAAN,IAAgB,IAD3B;AAEHX,IAAAA,QAAQ,EAAEtB,KAAK,CAACsB;AAFb,GAAP;AAIH,CALD;;AAOA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHR,IAAAA,cAAc,EAAE,MAAMQ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExC;AAAR,KAAD,CAD3B;AAEHyB,IAAAA,cAAc,EAAGgB,OAAD,IAAaF,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEvC,iBAAR;AAA2BqB,MAAAA,IAAI,EAAEmB;AAAjC,KAAD;AAFlC,GAAP;AAIH,CALD;;AAOA,eAAevC,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnC,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegularButton from \"../../../components/inputs/RegularButton\";\r\nimport TextInput from \"../../../components/inputs/TextInput\";\r\nimport * as classes from './login.module.css';\r\nimport axios from 'axios';\r\nimport { LOGIN_URL } from '../../../constants/ServerRoutes';\r\nimport { ROOM_URL, ROOM_JOIN_URL, SIGNUP_URL, ACTIVITY_URL } from '../../../constants/ClientRoutes';\r\n\r\nimport ErrorMessage from '../../../components/inputs/ErrorMessage';\r\nimport { CHECK_AUTH_STATE, AUTHENTICATE_USER } from '../../../store/Actions/ActionConstants';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        userLoggedIn: false\r\n    }\r\n\r\n    handleEmail = event => {\r\n        this.setState({ email: event.target.value });\r\n    };\r\n    handlePassword = event => {\r\n        this.setState({ password: event.target.value });\r\n    };\r\n\r\n    validate = () => {\r\n        if (this.state.email === '' || this.state.password === '')\r\n            this.setState({ error: \"Email id/ Password cannot be empty\" })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.checkAuthState();\r\n    }\r\n\r\n    authenticateUser = async () => {\r\n        this.validate();\r\n\r\n        let loginCredentials = { email: this.state.email, password: this.state.password }\r\n        let loginStatus = (await axios.post(LOGIN_URL, loginCredentials)).data;\r\n\r\n        let { responseObject, user } = loginStatus;\r\n\r\n        if (responseObject.Result === \"Success\") {\r\n            this.props.updateUserData(user);\r\n            this.setState({ error: \"\" }, () => {\r\n                if (this.props.roomName)\r\n                    this.props.history.push(ROOM_URL + '/' + this.props.roomName + ACTIVITY_URL);\r\n                else\r\n                    this.props.history.push(ROOM_JOIN_URL);\r\n            })\r\n        }\r\n\r\n        else\r\n            this.setState({ error: responseObject.Error })\r\n    }\r\n\r\n    render() {\r\n\r\n        let erorrMessage = null;\r\n\r\n        if (this.state.error)\r\n            erorrMessage = (<ErrorMessage message={this.state.error} />)\r\n\r\n        return (\r\n            <div >\r\n                <h1>RoomEase</h1>\r\n                <form className={classes.Form}>\r\n                    <p className={classes.signin}>Sign In</p>\r\n                    <TextInput hint=\"Enter Email\" type=\"text\" onChange={this.handleEmail} />\r\n                    <TextInput hint=\"Enter Password\" type=\"password\" onChange={this.handlePassword} />\r\n\r\n                    <RegularButton text=\"SUBMIT\" onClick={this.authenticateUser} />\r\n                    {erorrMessage}\r\n                    <p className=\"forgot-password text-right\">\r\n                        <Link to={SIGNUP_URL}>Don't have an account? Signup here</Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userLoggedIn: state.userID != null,\r\n        roomName: state.roomName\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkAuthState: () => dispatch({ type: CHECK_AUTH_STATE }),\r\n        updateUserData: (payload) => dispatch({ type: AUTHENTICATE_USER, user: payload })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}