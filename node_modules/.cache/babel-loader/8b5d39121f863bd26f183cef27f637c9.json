{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\containers\\\\ViewNotes\\\\EditNote\\\\EditNote.js\";\nimport React, { Component } from 'react';\nimport * as classes from './editnote.module.css';\nimport Axios from 'axios';\nimport { NOTES_URL } from '../../../constants/ServerRoutes';\nimport { withLayout } from '../../../hoc/Layout/withLayout';\nimport RegularButton from '../../../components/inputs/RegularButton';\nimport Snackbar from '../../../components/inputs/Snackbar';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        body: event.target.value\n      });\n    };\n\n    this.titleChange = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.getNotedetails = async () => {\n      let noteid = this.props.match.params.noteid;\n      let url = NOTES_URL + \"?noteid=\" + noteid;\n      let taskModel = (await Axios.get(url)).data;\n      let {\n        body,\n        title,\n        shared,\n        createdOn,\n        createdBy,\n        roomName,\n        _id\n      } = taskModel.notes[0];\n      this.setState({\n        title,\n        roomName,\n        shared,\n        _id,\n        body,\n        createdBy,\n        createdOn\n      });\n    };\n\n    this.handleSharing = () => {\n      this.setState({\n        shared: !this.state.shared\n      });\n    };\n\n    this.deleteNote = async () => {\n      let taskDeletionStatus = (await Axios.delete(`${NOTES_URL}?noteid=${this.state._id}&userID=${localStorage.getItem(\"userID\")}`)).data;\n      console.log(taskDeletionStatus);\n      if (taskDeletionStatus.Result === \"Fail\") this.setState({\n        snackbarMessage: taskDeletionStatus.Error\n      });\n    };\n\n    this.updateNote = async () => {\n      let notesModel = {\n        shared: this.state.shared,\n        _id: this.state._id,\n        createdOn: this.state.createdOn,\n        title: this.state.title,\n        body: this.state.body,\n        createdBy: this.state.createdBy,\n        userID: this.state.userID\n      };\n      let noteUpdationStatus = (await Axios.patch(NOTES_URL, notesModel)).data;\n      this.props.history.goBack();\n    };\n\n    this.state = {\n      _id: null,\n      body: '',\n      title: '',\n      shared: false,\n      roomName: \"\",\n      createdBy: \"\",\n      createdOn: \"\",\n      userID: localStorage.getItem(\"userID\"),\n      snackbarMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getNotedetails();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.title,\n      placeholder: \"Title\",\n      onChange: this.titleChange,\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      placeholder: \"Type your note here..\",\n      className: classes.note,\n      name: \"text area\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttoncontainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.button2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Share with roommates:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.shared,\n      onChange: this.handleSharing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 49\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.UpdateButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RegularButton, {\n      onClick: this.updateNote,\n      text: \"Update note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 250,\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RegularButton, {\n      onClick: this.deleteNote,\n      type: \"danger\",\n      text: \"Delete note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      message: this.state.snackbarMessage,\n      hideMessage: () => this.setState({\n        snackbarMessage: \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withLayout(EditNote);","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/containers/ViewNotes/EditNote/EditNote.js"],"names":["React","Component","classes","Axios","NOTES_URL","withLayout","RegularButton","Snackbar","EditNote","constructor","props","handleChange","event","setState","body","target","value","titleChange","title","getNotedetails","noteid","match","params","url","taskModel","get","data","shared","createdOn","createdBy","roomName","_id","notes","handleSharing","state","deleteNote","taskDeletionStatus","delete","localStorage","getItem","console","log","Result","snackbarMessage","Error","updateNote","notesModel","userID","noteUpdationStatus","patch","history","goBack","componentDidMount","render","note","buttoncontainer","button2","UpdateButton","width","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as classes from './editnote.module.css';\r\nimport Axios from 'axios';\r\nimport { NOTES_URL } from '../../../constants/ServerRoutes';\r\nimport { withLayout } from '../../../hoc/Layout/withLayout'\r\nimport RegularButton from '../../../components/inputs/RegularButton';\r\nimport Snackbar from '../../../components/inputs/Snackbar';\r\n\r\nclass EditNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: null,\r\n            body: '',\r\n            title: '',\r\n            shared: false,\r\n            roomName: \"\",\r\n            createdBy: \"\",\r\n            createdOn: \"\",\r\n            userID: localStorage.getItem(\"userID\"),\r\n            snackbarMessage: \"\"\r\n        }\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ body: event.target.value })\r\n    }\r\n    titleChange = (event) => {\r\n        this.setState({ title: event.target.value });\r\n    }\r\n\r\n\r\n\r\n    getNotedetails = async () => {\r\n        let noteid = this.props.match.params.noteid\r\n        let url = NOTES_URL + \"?noteid=\" + noteid;\r\n        let taskModel = (await Axios.get(url)).data;\r\n        let { body, title, shared, createdOn, createdBy, roomName, _id } = taskModel.notes[0];\r\n        this.setState(\r\n            {\r\n                title,\r\n                roomName,\r\n                shared,\r\n                _id,\r\n                body,\r\n                createdBy,\r\n                createdOn,\r\n\r\n            })\r\n\r\n    }\r\n    handleSharing = () => {\r\n        this.setState({ shared: !this.state.shared })\r\n    }\r\n    deleteNote = async () => {\r\n        let taskDeletionStatus = (await Axios.delete(`${NOTES_URL}?noteid=${this.state._id}&userID=${localStorage.getItem(\"userID\")}`)).data;\r\n        console.log(taskDeletionStatus);\r\n\r\n        if (taskDeletionStatus.Result === \"Fail\")\r\n            this.setState({ snackbarMessage: taskDeletionStatus.Error })\r\n\r\n\r\n    }\r\n\r\n    updateNote = async () => {\r\n        let notesModel = {\r\n            shared: this.state.shared,\r\n            _id: this.state._id,\r\n            createdOn: this.state.createdOn,\r\n            title: this.state.title,\r\n            body: this.state.body,\r\n            createdBy: this.state.createdBy,\r\n            userID: this.state.userID,\r\n        }\r\n        let noteUpdationStatus = (await Axios.patch(NOTES_URL, notesModel)).data;\r\n        this.props.history.goBack();\r\n    }\r\n    componentDidMount() {\r\n        this.getNotedetails();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input value={this.state.title} placeholder=\"Title\" onChange={this.titleChange} className={classes.title} />\r\n                <p />\r\n                <textarea rows=\"10\" placeholder=\"Type your note here..\" className={classes.note} name=\"text area\" value={this.state.body} onChange={this.handleChange}></textarea>\r\n                <div className={classes.buttoncontainer}>\r\n                    <div className={classes.button2}>\r\n                        <p>Share with roommates:<input type=\"checkbox\" checked={this.state.shared} onChange={this.handleSharing} /></p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.UpdateButton}>\r\n                    <RegularButton onClick={this.updateNote} text=\"Update note\"></RegularButton>\r\n                </div>\r\n                <div style={{ width: 250, justifyContent: \"center\" }}>\r\n                    <RegularButton onClick={this.deleteNote} type=\"danger\" text=\"Delete note\"></RegularButton>\r\n                </div>\r\n\r\n                <Snackbar message={this.state.snackbarMessage} hideMessage={() => this.setState({ snackbarMessage: \"\" })} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withLayout(EditNote);"]},"metadata":{},"sourceType":"module"}