{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\components\\\\inputs\\\\TextInput.js\";\n//reusable text input\nimport React from 'react';\nimport * as classes from './textinput.module.css';\n\nconst TextInput = props => {\n  let inputArea = null;\n\n  if (props.type === \"number\") {\n    inputArea = /*#__PURE__*/React.createElement(\"input\", {\n      min: 1,\n      onChange: event => props.onChange(event, \"number\"),\n      placeholder: props.hint,\n      type: \"number\",\n      value: props.value,\n      className: classes.Number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    });\n  } else if (props.type === \"textarea\") inputArea = /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    onChange: event => props.onChange(event, \"textarea\"),\n    placeholder: props.hint,\n    value: props.value,\n    className: classes.Textarea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  });else {\n    inputArea = /*#__PURE__*/React.createElement(\"input\", {\n      className: classes.Input,\n      type: props.type ? props.type : \"text\",\n      value: props.value,\n      onChange: event => props.onChange(event, \"text\"),\n      placeholder: props.hint,\n      onKeyDown: props.onKeyDown,\n      ref: props.reference,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, inputArea);\n};\n\nexport default TextInput;","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/components/inputs/TextInput.js"],"names":["React","classes","TextInput","props","inputArea","type","event","onChange","hint","value","Number","Textarea","Input","onKeyDown","reference","Container"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,MAAIC,SAAS,GAAG,IAAhB;;AAGA,MAAID,KAAK,CAACE,IAAN,KAAe,QAAnB,EAA6B;AAE3BD,IAAAA,SAAS,gBAEP;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,QAAQ,EAAGE,KAAD,IAAWH,KAAK,CAACI,QAAN,CAAeD,KAAf,EAAsB,QAAtB,CAFvB;AAGE,MAAA,WAAW,EAAEH,KAAK,CAACK,IAHrB;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAEL,KAAK,CAACM,KALf;AAME,MAAA,SAAS,EAAER,OAAO,CAACS,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAaD,GAfD,MAiBK,IAAIP,KAAK,CAACE,IAAN,KAAe,UAAnB,EACHD,SAAS,gBACP;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,QAAQ,EAAGE,KAAD,IAAWH,KAAK,CAACI,QAAN,CAAeD,KAAf,EAAsB,UAAtB,CAHvB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACK,IAJrB;AAKE,IAAA,KAAK,EAAEL,KAAK,CAACM,KALf;AAME,IAAA,SAAS,EAAER,OAAO,CAACU,QANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADG,KAWA;AACHP,IAAAA,SAAS,gBAAI;AACX,MAAA,SAAS,EAAEH,OAAO,CAACW,KADR;AAEX,MAAA,IAAI,EAAET,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACE,IAAnB,GAA0B,MAFrB;AAGX,MAAA,KAAK,EAAEF,KAAK,CAACM,KAHF;AAIX,MAAA,QAAQ,EAAGH,KAAD,IAAWH,KAAK,CAACI,QAAN,CAAeD,KAAf,EAAsB,MAAtB,CAJV;AAKX,MAAA,WAAW,EAAEH,KAAK,CAACK,IALR;AAMX,MAAA,SAAS,EAAEL,KAAK,CAACU,SANN;AAOX,MAAA,GAAG,EAAEV,KAAK,CAACW,SAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AASD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIX,SADJ,CADF;AAKD,CAjDD;;AAmDA,eAAeF,SAAf","sourcesContent":["//reusable text input\r\nimport React from 'react';\r\nimport * as classes from './textinput.module.css';\r\n\r\nconst TextInput = props => {\r\n  let inputArea = null;\r\n\r\n\r\n  if (props.type === \"number\") {\r\n\r\n    inputArea = (\r\n\r\n      <input\r\n        min={1}\r\n        onChange={(event) => props.onChange(event, \"number\")}\r\n        placeholder={props.hint}\r\n        type=\"number\"\r\n        value={props.value}\r\n        className={classes.Number}\r\n      >\r\n\r\n      </input>\r\n    )\r\n  }\r\n\r\n  else if (props.type === \"textarea\")\r\n    inputArea = (\r\n      <textarea\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        onChange={(event) => props.onChange(event, \"textarea\")}\r\n        placeholder={props.hint}\r\n        value={props.value}\r\n        className={classes.Textarea}>\r\n      </textarea>)\r\n\r\n  else {\r\n    inputArea = (<input\r\n      className={classes.Input}\r\n      type={props.type ? props.type : \"text\"}\r\n      value={props.value}\r\n      onChange={(event) => props.onChange(event, \"text\")}\r\n      placeholder={props.hint}\r\n      onKeyDown={props.onKeyDown}\r\n      ref={props.reference}\r\n    />)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      { inputArea}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}