{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\components\\\\NavigationDrawer\\\\NavigationDrawer.js\";\nimport React from 'react';\nimport * as classes from './navigationdrawer.module.css';\nimport roomImage from '../../assets/room.png';\nimport notesImage from '../../assets/notes.png';\nimport splitMoneyImage from '../../assets/split_money.png';\nimport inviteImage from '../../assets/invite.png';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { CHECK_AUTH_STATE } from '../../store/Actions/ActionConstants';\nimport * as URLS from '../../constants/ClientRoutes';\n\nconst NavigationDrawer = props => {\n  let viewDrawer = [classes.container];\n\n  if (props.view) {\n    viewDrawer.push(classes.ViewContainer);\n  } else viewDrawer.push(classes.HideContainer);\n\n  let constructMenuItems = () => {\n    let menuItems = [];\n    let roomName = localStorage.getItem(\"roomName\");\n\n    if (roomName !== \"null\") {\n      menuItems.push({\n        image: roomImage,\n        text: \"My Room\",\n        link: `/room/${props.roomName}/activity`\n      });\n    }\n\n    menuItems.push({\n      image: splitMoneyImage,\n      text: \"Split Ease\",\n      link: URLS.SPLIT_EASE_URL + URLS.SPLIT_EASE_FEED\n    });\n    menuItems.push({\n      image: notesImage,\n      text: \"Notes\",\n      link: URLS.NOTES_URL + URLS.VIEW_SELF_NOTES_URL\n    });\n    if (roomName === \"null\") menuItems.push({\n      image: inviteImage,\n      text: \"Invite / Join\",\n      link: \"/room/join\"\n    });\n    return menuItems;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: viewDrawer.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Select an option\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, constructMenuItems().map(item => /*#__PURE__*/React.createElement(Link, {\n    to: item.link,\n    key: item.text,\n    className: classes.Link,\n    onClick: props.closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    className: classes.image,\n    alt: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, item.text))))));\n};\n\nlet mapStateToProps = state => {\n  return {\n    roomName: state.roomName\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    checkAuthState: () => dispatch({\n      type: CHECK_AUTH_STATE\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationDrawer);","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/components/NavigationDrawer/NavigationDrawer.js"],"names":["React","classes","roomImage","notesImage","splitMoneyImage","inviteImage","Link","connect","CHECK_AUTH_STATE","URLS","NavigationDrawer","props","viewDrawer","container","view","push","ViewContainer","HideContainer","constructMenuItems","menuItems","roomName","localStorage","getItem","image","text","link","SPLIT_EASE_URL","SPLIT_EASE_FEED","NOTES_URL","VIEW_SELF_NOTES_URL","join","list","map","item","closeMenu","listItem","items","mapStateToProps","state","mapDispatchToProps","dispatch","checkAuthState","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as classes from './navigationdrawer.module.css';\r\nimport roomImage from '../../assets/room.png'\r\nimport notesImage from '../../assets/notes.png'\r\nimport splitMoneyImage from '../../assets/split_money.png'\r\nimport inviteImage from '../../assets/invite.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { CHECK_AUTH_STATE } from '../../store/Actions/ActionConstants';\r\nimport * as URLS from '../../constants/ClientRoutes';\r\n\r\nconst NavigationDrawer = props => {\r\n\r\n    let viewDrawer = [classes.container]\r\n\r\n    if (props.view) {\r\n        viewDrawer.push(classes.ViewContainer);\r\n    }\r\n    else\r\n        viewDrawer.push(classes.HideContainer);\r\n\r\n\r\n    let constructMenuItems = () => {\r\n        let menuItems = [];\r\n\r\n        let roomName = localStorage.getItem(\"roomName\");\r\n\r\n        if (roomName !== \"null\") {\r\n            menuItems.push({\r\n                image: roomImage,\r\n                text: \"My Room\",\r\n                link: `/room/${props.roomName}/activity`\r\n            });\r\n        }\r\n\r\n        menuItems.push({\r\n            image: splitMoneyImage,\r\n            text: \"Split Ease\",\r\n            link: URLS.SPLIT_EASE_URL + URLS.SPLIT_EASE_FEED\r\n        });\r\n\r\n        menuItems.push({\r\n            image: notesImage,\r\n            text: \"Notes\",\r\n            link: URLS.NOTES_URL + URLS.VIEW_SELF_NOTES_URL\r\n        });\r\n\r\n        if (roomName === \"null\")\r\n            menuItems.push({\r\n                image: inviteImage,\r\n                text: \"Invite / Join\",\r\n                link: \"/room/join\"\r\n            });\r\n\r\n        return menuItems;\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={viewDrawer.join(' ')}>\r\n            <h1>Select an option</h1>\r\n            <ul className={classes.list}>\r\n                {constructMenuItems().map(item =>\r\n                    <Link to={item.link} key={item.text} className={classes.Link} onClick={props.closeMenu}>\r\n                        <li className={classes.listItem}>\r\n                            <img src={item.image} className={classes.image} alt={item.text} />\r\n                            <p className={classes.items}>{item.text}</p>\r\n                        </li>\r\n                    </Link>\r\n                )}\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        roomName: state.roomName\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch({ type: CHECK_AUTH_STATE })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationDrawer);"]},"metadata":{},"sourceType":"module"}