{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev\\\\React\\\\RoomEase\\\\RoomEase-FrontEnd\\\\src\\\\containers\\\\JoinRoom\\\\JoinRoom.js\";\nimport React, { Component } from 'react';\nimport RegularButton from \"../../components/inputs/RegularButton\";\nimport TextInput from \"../../components/inputs/TextInput\";\nimport * as classes from './joinroom.module.css';\nimport axios from 'axios';\nimport { JOIN_ROOM_URL } from '../../constants/ServerRoutes';\nimport { ROOM_CREATE_URL, ROOM_URL, ACTIVITY_URL } from '../../constants/ClientRoutes';\nimport { connect } from 'react-redux';\nimport { AUTHENTICATE_USER } from '../../store/Actions/ActionConstants';\nimport { withLayout } from '../../hoc/Layout/withLayout';\n\nclass JoinRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRoomName = event => {\n      this.setState({\n        roomName: event.target.value\n      });\n    };\n\n    this.authenticateRoom = async () => {\n      let loginCredentials = {\n        userID: localStorage.getItem('userID'),\n        roomName: this.state.roomName\n      };\n      let loginStatus = (await axios.post(JOIN_ROOM_URL, loginCredentials)).data;\n\n      if (loginStatus.Result === 'Success') {\n        this.props.saveDataToRedux({\n          _id: this.props.userID,\n          roomName: this.state.roomName\n        });\n        this.setState({\n          error: 'Added to room'\n        });\n        this.props.history.push(`${ROOM_URL}/${this.state.roomName}${ACTIVITY_URL}`);\n      } else this.setState({\n        error: loginStatus.Error\n      });\n    };\n\n    this.createRoom = () => {\n      this.props.history.push(ROOM_CREATE_URL);\n    };\n\n    this.state = {\n      roomName: '',\n      userID: '',\n      error: ''\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.state.error) errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, this.state.error);\n    let joinRoommButton = null;\n    if (this.props.userID) joinRoommButton = /*#__PURE__*/React.createElement(RegularButton, {\n      disabled: this.state.roomName ? false : true,\n      text: \"Join\",\n      onClick: this.authenticateRoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"RoomEase\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.div,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \" Join Room \"), /*#__PURE__*/React.createElement(TextInput, {\n      hint: \"Enter room name\",\n      type: \"text\",\n      onChange: this.handleRoomName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), joinRoommButton, errorMessage, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \" OR\"), /*#__PURE__*/React.createElement(RegularButton, {\n      text: \"Create a room\",\n      onClick: this.createRoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    userID: state.userID\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    saveDataToRedux: payload => dispatch({\n      type: AUTHENTICATE_USER,\n      user: payload\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayout(JoinRoom));","map":{"version":3,"sources":["E:/Web Dev/React/RoomEase/RoomEase-FrontEnd/src/containers/JoinRoom/JoinRoom.js"],"names":["React","Component","RegularButton","TextInput","classes","axios","JOIN_ROOM_URL","ROOM_CREATE_URL","ROOM_URL","ACTIVITY_URL","connect","AUTHENTICATE_USER","withLayout","JoinRoom","constructor","props","handleRoomName","event","setState","roomName","target","value","authenticateRoom","loginCredentials","userID","localStorage","getItem","state","loginStatus","post","data","Result","saveDataToRedux","_id","error","history","push","Error","createRoom","render","errorMessage","joinRoommButton","div","mapStateToProps","mapDispatchToProps","dispatch","payload","type","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport RegularButton from \"../../components/inputs/RegularButton\";\r\nimport TextInput from \"../../components/inputs/TextInput\";\r\nimport * as classes from './joinroom.module.css';\r\nimport axios from 'axios';\r\nimport { JOIN_ROOM_URL } from '../../constants/ServerRoutes';\r\nimport { ROOM_CREATE_URL, ROOM_URL, ACTIVITY_URL } from '../../constants/ClientRoutes';\r\nimport { connect } from 'react-redux';\r\nimport { AUTHENTICATE_USER } from '../../store/Actions/ActionConstants'\r\nimport { withLayout } from '../../hoc/Layout/withLayout'\r\n\r\nclass JoinRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roomName: '',\r\n            userID: '',\r\n            error: ''\r\n        };\r\n    }\r\n    handleRoomName = event => {\r\n        this.setState({ roomName: event.target.value });\r\n    }\r\n\r\n    authenticateRoom = async () => {\r\n        let loginCredentials = { userID: localStorage.getItem('userID'), roomName: this.state.roomName }\r\n        let loginStatus = (await axios.post(JOIN_ROOM_URL, loginCredentials)).data;\r\n\r\n        if (loginStatus.Result === 'Success') {\r\n            this.props.saveDataToRedux({ _id: this.props.userID, roomName: this.state.roomName });\r\n            this.setState({ error: 'Added to room' })\r\n            this.props.history.push(`${ROOM_URL}/${this.state.roomName}${ACTIVITY_URL}`);\r\n        }\r\n\r\n        else\r\n            this.setState({ error: loginStatus.Error })\r\n    }\r\n\r\n    createRoom = () => {\r\n        this.props.history.push(ROOM_CREATE_URL);\r\n    }\r\n\r\n    render() {\r\n        let errorMessage = null;\r\n        if (this.state.error)\r\n            errorMessage = (<p className={classes.error}>{this.state.error}</p>)\r\n\r\n        let joinRoommButton = null;\r\n\r\n        if (this.props.userID)\r\n            joinRoommButton = (<RegularButton disabled={this.state.roomName ? false : true} text=\"Join\" onClick={this.authenticateRoom}></RegularButton>);\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>RoomEase</h1>\r\n                <div className={classes.div}>\r\n                    <p> Join Room </p>\r\n                    <TextInput hint=\"Enter room name\" type=\"text\" onChange={this.handleRoomName} ></TextInput>\r\n                    {joinRoommButton}\r\n                    {errorMessage}\r\n                    <h3> OR</h3>\r\n                    <RegularButton text=\"Create a room\" onClick={this.createRoom}></RegularButton>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        userID: state.userID\r\n    };\r\n}\r\n\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveDataToRedux: (payload) => dispatch({ type: AUTHENTICATE_USER, user: payload })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayout(JoinRoom));\r\n\r\n"]},"metadata":{},"sourceType":"module"}